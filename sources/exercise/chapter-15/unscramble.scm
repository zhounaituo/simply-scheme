; (unscramble '(this is the roach the gladiator killed))
; -> (this is the gladiator that killed the roach)
(define (unscramble sent)
  (se (residue sent) (unscramble-helper (noun sent) (predicate sent))))
; (unscramble-helper '(roach gladiator) '(killed)) -> (the gladiator that killed the roach)
(define (unscramble-helper noun predicate)
  (cond ((empty? noun) '())
        ((empty? predicate) (se 'the (last noun)))
        (else (se 'the (last noun) 'than (first predicate)
                  (unscramble-helper (bl noun) (bf predicate))))))
; (noun '(this is the roach the gladiator killed)) -> (roach gladiator)
(define (noun sent)
  (if (empty? sent)
      '()
      (if (equal? (first sent) 'the)
          (se (first (bf sent)) (noun (bf sent)))
          (noun (bf sent)))))
; (predicate '(this is the roach the gladiator killed)) -> (killed)
(define (predicate sent)
  (cond ((or (empty? sent) (equal? (last (bl sent)) 'the)) '())
        (else (se (predicate (bl sent)) (last sent)))))
(define (residue sent)
; (residue '(this is the roach the gladiator killed)) -> (this is)
(define (residue sent)
  (if (or (empty? sent) (equal? (first sent) 'the))
      '()
      (se (first sent) (residue (bf sent)))))
